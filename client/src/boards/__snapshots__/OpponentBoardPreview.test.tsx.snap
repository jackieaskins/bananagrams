// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<OpponentBoardPreview /> does not render if no opponents 1`] = `""`;

exports[`<OpponentBoardPreview /> renders current player if includeCurrentPlayer 1`] = `
<WithStyles(ForwardRef(Grid))
  alignItems="center"
  container={true}
  direction="column"
  spacing={1}
>
  <WithStyles(ForwardRef(Grid))
    item={true}
  >
    <Styled(MuiBox)
      flexDirection="column"
      width="317px"
    >
      <PreviewBoard
        board={
          Array [
            Array [
              null,
            ],
          ]
        }
        tileSize={15}
      />
      <PreviewHand
        hand={Array []}
        tileSize={15}
      />
    </Styled(MuiBox)>
  </WithStyles(ForwardRef(Grid))>
  <WithStyles(ForwardRef(Grid))
    item={true}
    style={
      Object {
        "width": "100%",
      }
    }
  >
    <Styled(MuiBox)
      display="flex"
      justifyContent="space-between"
    >
      <WithStyles(ForwardRef(IconButton))
        disabled={true}
        onClick={[MockFunction handleLeftClick]}
        size="small"
      >
        <Memo(ForwardRef(NavigateBeforeIcon))
          fontSize="small"
        />
      </WithStyles(ForwardRef(IconButton))>
      <WithStyles(ForwardRef(TextField))
        disabled={true}
        onChange={[MockFunction handleSelectedPlayerChange]}
        select={true}
        size="small"
        value="opponent"
      >
        <WithStyles(ForwardRef(MenuItem))
          key="playerId"
          value="playerId"
        >
          username
        </WithStyles(ForwardRef(MenuItem))>
      </WithStyles(ForwardRef(TextField))>
      <WithStyles(ForwardRef(IconButton))
        disabled={true}
        onClick={[MockFunction handleRightClick]}
        size="small"
      >
        <Memo(ForwardRef(NavigateNextIcon))
          fontSize="small"
        />
      </WithStyles(ForwardRef(IconButton))>
    </Styled(MuiBox)>
  </WithStyles(ForwardRef(Grid))>
</WithStyles(ForwardRef(Grid))>
`;

exports[`<OpponentBoardPreview /> renders empty board and hand when selectedIndex is out of bounds 1`] = `
<WithStyles(ForwardRef(Grid))
  alignItems="center"
  container={true}
  direction="column"
  spacing={1}
>
  <WithStyles(ForwardRef(Grid))
    item={true}
  >
    <Styled(MuiBox)
      flexDirection="column"
      width="317px"
    >
      <PreviewBoard
        board={
          Array [
            Array [
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
            ],
            Array [
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
            ],
            Array [
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
            ],
            Array [
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
            ],
            Array [
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
            ],
            Array [
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
            ],
            Array [
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
            ],
            Array [
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
            ],
            Array [
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
            ],
            Array [
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
            ],
            Array [
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
            ],
            Array [
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
            ],
            Array [
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
            ],
            Array [
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
            ],
            Array [
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
            ],
            Array [
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
            ],
            Array [
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
            ],
            Array [
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
            ],
            Array [
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
            ],
            Array [
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
            ],
            Array [
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
            ],
          ]
        }
        tileSize={15}
      />
      <PreviewHand
        hand={Array []}
        tileSize={15}
      />
    </Styled(MuiBox)>
  </WithStyles(ForwardRef(Grid))>
  <WithStyles(ForwardRef(Grid))
    item={true}
    style={
      Object {
        "width": "100%",
      }
    }
  >
    <Styled(MuiBox)
      display="flex"
      justifyContent="space-between"
    >
      <WithStyles(ForwardRef(IconButton))
        disabled={true}
        onClick={[MockFunction handleLeftClick]}
        size="small"
      >
        <Memo(ForwardRef(NavigateBeforeIcon))
          fontSize="small"
        />
      </WithStyles(ForwardRef(IconButton))>
      <WithStyles(ForwardRef(TextField))
        disabled={true}
        onChange={[MockFunction handleSelectedPlayerChange]}
        select={true}
        size="small"
        value="opponent"
      >
        <WithStyles(ForwardRef(MenuItem))
          key="opponent"
          value="opponent"
        >
          username
        </WithStyles(ForwardRef(MenuItem))>
      </WithStyles(ForwardRef(TextField))>
      <WithStyles(ForwardRef(IconButton))
        disabled={true}
        onClick={[MockFunction handleRightClick]}
        size="small"
      >
        <Memo(ForwardRef(NavigateNextIcon))
          fontSize="small"
        />
      </WithStyles(ForwardRef(IconButton))>
    </Styled(MuiBox)>
  </WithStyles(ForwardRef(Grid))>
</WithStyles(ForwardRef(Grid))>
`;

exports[`<OpponentBoardPreview /> renders properly with multiple opponents 1`] = `
<WithStyles(ForwardRef(Grid))
  alignItems="center"
  container={true}
  direction="column"
  spacing={1}
>
  <WithStyles(ForwardRef(Grid))
    item={true}
  >
    <Styled(MuiBox)
      flexDirection="column"
      width="317px"
    >
      <PreviewBoard
        board={
          Array [
            Array [
              null,
            ],
          ]
        }
        tileSize={15}
      />
      <PreviewHand
        hand={Array []}
        tileSize={15}
      />
    </Styled(MuiBox)>
  </WithStyles(ForwardRef(Grid))>
  <WithStyles(ForwardRef(Grid))
    item={true}
    style={
      Object {
        "width": "100%",
      }
    }
  >
    <Styled(MuiBox)
      display="flex"
      justifyContent="space-between"
    >
      <WithStyles(ForwardRef(IconButton))
        disabled={false}
        onClick={[MockFunction handleLeftClick]}
        size="small"
      >
        <Memo(ForwardRef(NavigateBeforeIcon))
          fontSize="small"
        />
      </WithStyles(ForwardRef(IconButton))>
      <WithStyles(ForwardRef(TextField))
        disabled={false}
        onChange={[MockFunction handleSelectedPlayerChange]}
        select={true}
        size="small"
        value="opponent"
      >
        <WithStyles(ForwardRef(MenuItem))
          key="opponent"
          value="opponent"
        >
          username
        </WithStyles(ForwardRef(MenuItem))>
        <WithStyles(ForwardRef(MenuItem))
          key="opponent2"
          value="opponent2"
        >
          username
        </WithStyles(ForwardRef(MenuItem))>
      </WithStyles(ForwardRef(TextField))>
      <WithStyles(ForwardRef(IconButton))
        disabled={false}
        onClick={[MockFunction handleRightClick]}
        size="small"
      >
        <Memo(ForwardRef(NavigateNextIcon))
          fontSize="small"
        />
      </WithStyles(ForwardRef(IconButton))>
    </Styled(MuiBox)>
  </WithStyles(ForwardRef(Grid))>
</WithStyles(ForwardRef(Grid))>
`;

exports[`<OpponentBoardPreview /> renders properly with one opponent 1`] = `
<WithStyles(ForwardRef(Grid))
  alignItems="center"
  container={true}
  direction="column"
  spacing={1}
>
  <WithStyles(ForwardRef(Grid))
    item={true}
  >
    <Styled(MuiBox)
      flexDirection="column"
      width="317px"
    >
      <PreviewBoard
        board={
          Array [
            Array [
              null,
            ],
          ]
        }
        tileSize={15}
      />
      <PreviewHand
        hand={Array []}
        tileSize={15}
      />
    </Styled(MuiBox)>
  </WithStyles(ForwardRef(Grid))>
  <WithStyles(ForwardRef(Grid))
    item={true}
    style={
      Object {
        "width": "100%",
      }
    }
  >
    <Styled(MuiBox)
      display="flex"
      justifyContent="space-between"
    >
      <WithStyles(ForwardRef(IconButton))
        disabled={true}
        onClick={[MockFunction handleLeftClick]}
        size="small"
      >
        <Memo(ForwardRef(NavigateBeforeIcon))
          fontSize="small"
        />
      </WithStyles(ForwardRef(IconButton))>
      <WithStyles(ForwardRef(TextField))
        disabled={true}
        onChange={[MockFunction handleSelectedPlayerChange]}
        select={true}
        size="small"
        value="opponent"
      >
        <WithStyles(ForwardRef(MenuItem))
          key="opponent"
          value="opponent"
        >
          username
        </WithStyles(ForwardRef(MenuItem))>
      </WithStyles(ForwardRef(TextField))>
      <WithStyles(ForwardRef(IconButton))
        disabled={true}
        onClick={[MockFunction handleRightClick]}
        size="small"
      >
        <Memo(ForwardRef(NavigateNextIcon))
          fontSize="small"
        />
      </WithStyles(ForwardRef(IconButton))>
    </Styled(MuiBox)>
  </WithStyles(ForwardRef(Grid))>
</WithStyles(ForwardRef(Grid))>
`;
